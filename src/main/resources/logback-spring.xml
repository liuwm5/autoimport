<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
    <property name="LOG_FILE" value="${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/autoimport}"/>
    <property name="CONSOLE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"/>
    <property name="FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"/>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <charset>utf8</charset>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度，%msg：日志消息，%n是换行符-->
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>
    <!-- 按照每天生成日志文件 -->
    <appender name="TIME_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
        <file>${LOG_FILE}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名 -->
            <fileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>
    <!-- JRE -->
    <logger name="com.sun" level="ERROR"/>
    <!-- NETFLIX -->
    <logger name="com.netflix" level="ERROR"/>
    <!-- SPRING -->
    <logger name="org.springframework" level="info"/>
    <!-- TOMCAT -->
    <logger name="org.apache.catalina" level="ERROR"/>
    <!-- MYBATIS -->
    <logger name="org.mybatis.spring" level="ERROR"/>
    <!-- MONGODB -->
    <logger name="org.mongodb" level="DEBUG"/>
    <!-- SQL -->
    <logger name="com.magic.platform.mapper.build.dao" level="${logger.level}"/>

    <!--myibatis log configure-->
    <logger name="com.apache.ibatis" level="${logger.level}"/>
    <logger name="java.sql.Connection" level="${logger.level}"/>
    <logger name="java.sql.Statement" level="${logger.level}"/>
    <logger name="java.sql.PreparedStatement" level="${logger.level}"/>

    <!-- 业务日志输出级别 -->
    <logger name="com.magic.platform.core" level="${logger.level}"/>
    <logger name="com.magic.platform.util" level="${logger.level}"/>
    <logger name="com.magic.platform.support" level="${logger.level}"/>
    <!--<logger name="com.magic.platform.auth" level="${logger.level}" />-->
    <!-- 系统日志输出级别 -->
    <!--  管理端用户行为日志异步输出，异步的log片段必须在同步段后面，否则不起作用  -->
    <appender name="ASYNC_MANAGEMENT_HABITEVENT" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>10000</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="TIME_FILE"/>
    </appender>
    <root level="info">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="ASYNC_MANAGEMENT_HABITEVENT"/>
    </root>
</configuration>
